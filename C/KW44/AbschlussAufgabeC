

#include <stdio.h>
#include <malloc.h>

typedef struct TNode {
    int zahl;
    struct TNode *next;

}
TNode;

void printList(TNode *head) { // Man muss mit dem Element !=NULL arbeiten, dass es fortfÃ¤hrt bis NULL kommt und NULL ist das Ende der Liste.

    TNode *TNode = head;
    while (TNode != NULL) {
        printf("%d\n", TNode->zahl);
        TNode = TNode->next;

    }
}

void newNode(TNode **head) {

    int v = 23;
    for (int i = 0; i < 6; i++) {
        TNode *newNode = malloc(sizeof (TNode));
        newNode->zahl = v + i;
        newNode->next = NULL;



        //
        if (*head == NULL) {
            *head = newNode;



        } else {
            TNode *lastNode = *head;
            while (lastNode->next != NULL) {
                lastNode = lastNode->next;
            }
            lastNode->next = newNode;



        }

    }



}


int main() {


    struct TNode* head = NULL;
    struct TNode* second = NULL;
    struct TNode* third = NULL;
    struct TNode* fourth = NULL;

    head = (struct TNode*) malloc(sizeof (struct TNode));
    second = (struct TNode*) malloc(sizeof (struct TNode));
    third = (struct TNode*) malloc(sizeof (struct TNode));
    fourth = (struct TNode*) malloc(sizeof (struct TNode));

    head->zahl = 12;
    head->next = second;
    second->zahl = 2;
    second->next = third;
    third->zahl = 187;
    third->next = fourth;
    fourth->zahl = 69;
    fourth->next = NULL;

    // printf("%d", fourth->zahl);



    newNode(&head);
    printList(head);
    return 0;
}
